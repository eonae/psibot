from dataclasses import dataclass, field
from enum import Enum
from typing import Any


class MessageType(Enum):
    FILE_IS_DOWNLOADING = "FILE_IS_DOWNLOADING"
    FILE_MISSING = "FILE_MISSING"
    WRONG_MIME_TYPE = "WRONG_MIME_TYPE"
    FILE_SIZE_MISSING = "FILE_SIZE_MISSING"
    FILE_SIZE_TOO_LARGE = "FILE_SIZE_TOO_LARGE"
    DOWNLOAD_COMPLETED = "DOWNLOAD_COMPLETED"
    DOWNLOAD_FAILED = "DOWNLOAD_FAILED"
    CONVERT_COMPLETED = "CONVERT_COMPLETED"
    CONVERT_FAILED = "CONVERT_FAILED"
    DIARIZATION_COMPLETED = "DIARIZATION_COMPLETED"
    DIARIZATION_FAILED = "DIARIZATION_FAILED"
    MERGE_COMPLETED = "MERGE_COMPLETED"
    MERGE_FAILED = "MERGE_FAILED"
    POSTPROCESSING_COMPLETED = "POSTPROCESSING_COMPLETED"
    POSTPROCESSING_FAILED = "POSTPROCESSING_FAILED"
    TRANSCRIPTION_FAILED = "TRANSCRIPTION_FAILED"
    TRANSCRIPTION_COMPLETED = "TRANSCRIPTION_COMPLETED"
    NO_JOBS = "NO_JOBS"
    WELCOME = "WELCOME"
    HELP = "HELP"
    CONFIRMED = "CONFIRMED"
    REJECTED = "REJECTED"
    JOB_WRONG_STATUS = "JOB_WRONG_STATUS"
    WRONG_URL = "WRONG_URL"


@dataclass
class Message:
    type: MessageType
    params: dict[str, Any] = field(default_factory=dict)
