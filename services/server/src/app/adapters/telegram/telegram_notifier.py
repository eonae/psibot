"""
–†–µ–∞–ª–∏–∑–∞—Ü–∏—è Notifier –¥–ª—è Telegram.
"""

from aiogram import Bot  # type: ignore
from aiogram.types import (  # type: ignore
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    WebAppInfo,
)
from src.app.config import Config
from src.app.core.ports import Message, MessageType, Notifier

from .message_handler import TelegramMessageHandler


class TelegramNotifier(Notifier):
    """
    –†–µ–∞–ª–∏–∑–∞—Ü–∏—è Notifier –¥–ª—è Telegram.
    """

    def __init__(self, bot: Bot) -> None:
        self.handler = TelegramMessageHandler(bot)

    async def notify(self, user_id: int, message_type: MessageType, **params) -> None:
        message = Message(message_type, params)
        await self.handler.send_message(user_id, message)

    async def send_greetings(self, user_id: int) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /webapp"""

        config = Config()

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="üåê –û—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                        web_app=WebAppInfo(url=config.WEBAPP_URL)
                    )
                ]
            ]
        )

        message = Message(MessageType.WELCOME, {})

        await self.handler.send_message(user_id, message, reply_markup=keyboard)

    async def send_result_with_confirmation(
        self, user_id: int, file: bytes, filename: str, job_id: str
    ) -> None:
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm"
                    ),
                    InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data="reject"),
                ]
            ]
        )

        message = Message(
            MessageType.TRANSCRIPTION_COMPLETED,
            {"job_id": job_id},
        )

        await self.handler.send_document(
            user_id,
            file,
            filename,
            message,
            reply_markup=keyboard,
        )
